{"version":3,"sources":["logo.svg","components/navbar.jsx","imgs/imgs.js","imgs/ryzen_5_3600.jpg","imgs/i7_6700k.jpg","imgs/ryzen_9_3950x.jpg","imgs/i7_9700k.jpg","imgs/i7_10700k.jpg","imgs/i9_9900k.jpg","imgs/ryzen_9_5900x.jpg","imgs/i5_9400f.jpg","imgs/fx_9590.jpg","imgs/i7_7700k.jpg","imgs/fx_4350.jpg","imgs/fx_8350.jpg","imgs/pentium_g6400.jpg","imgs/i3_2100.jpg","imgs/i5_3470.jpg","imgs/xeon_e52640.jpg","imgs/athlon_200ge.jpg","imgs/ryzen_3_3200g.jpg","imgs/ryzen_5_1600.jpg","imgs/threadripper_1950X.jpg","components/product.jsx","components/productlist.jsx","components/cart.jsx","components/wishlist.jsx","components/order.jsx","components/checkout.jsx","components/body.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","state","search","handleSort","sortMethod","props","onSort","onNavigation","updateSearch","event","target","value","substr","setState","onSearch","Navbar","bg","variant","Nav","className","src","logo","alt","height","width","Button","onClick","Form","inline","FormControl","type","this","onChange","placeholder","Component","imgs","Product","info","productInfo","singleDisplay","onSelect","id","onBack","item","onAddToCart","onAddToWishList","handleBack","name","coreCount","coreClock","boostClock","thermalDesignPower","multithreading","socket","integratedGraphics","maximumMemory","price","handleAddToWishList","handleAddToCart","handleSelect","ProductList","visible","products","productId","filter","p","filteredProducts","product","toLowerCase","indexOf","Table","map","Cart","onRemoveFromCart","cart","i","handleRemoveFromCart","quantityInCart","WishList","onRemoveFromWishList","wishlist","handleRemoveFromWishList","Order","reciept","userInfo","items","generateConfirmationID","total","email","getCensoredCard","card","address","city","zip","result","chars","charAt","Math","floor","random","length","CheckOut","submitted","cartEmpty","cvv","nameError","emailError","cardError","cvvError","addressError","cityError","stateError","zipError","handleChange","e","handleSubmit","validate","onEmptyCart","includes","isNaN","parseInt","key","hasOwnProperty","Card","style","ListGroup","Item","FormLabel","disabled","Row","Group","as","Col","Body","handleNavigation","componentToDisplay","renderProductList","renderCart","renderWishList","renderCheckOut","productList","isEmpty","Object","keys","App","handleSearch","sortedProducts","sort","a","b","Date","parse","dateAdded","purchases","concat","handleEmptyCart","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd46b0eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ec61754c.svg\";","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport logo from \"../logo.svg\";\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    search: \"\",\r\n  };\r\n\r\n  /**\r\n   * Elevates the sorting and navigation parameters\r\n   * @param {string} sortMethod the method by which the product list will be sorted\r\n   */\r\n  handleSort = (sortMethod) => {\r\n    this.props.onSort(sortMethod);\r\n    this.props.onNavigation(\"productList\");\r\n  };\r\n\r\n  /**\r\n   * Updates the state to hold whatever the user has typed into the searchbar\r\n   * @param {Event} event the event of typing in the search bar\r\n   */\r\n  updateSearch = (event) => {\r\n    var target = event.target.value.substr(0, 20);\r\n    this.setState({ search: target });\r\n    this.props.onSearch(target);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" variant=\"light\">\r\n        <Nav className=\"mr-auto\">\r\n          <img src={logo} alt=\"logo\" height=\"50px\" width=\"150px\"></img>\r\n          <Button variant=\"link\" onClick={() => this.handleSort(\"default\")}>\r\n            Home\r\n          </Button>\r\n          <Button variant=\"link\" onClick={() => this.handleSort(\"new\")}>\r\n            New\r\n          </Button>\r\n          <Button variant=\"link\" onClick={() => this.handleSort(\"popular\")}>\r\n            Popular\r\n          </Button>\r\n        </Nav>\r\n        <Nav>\r\n          <Button\r\n            variant=\"link\"\r\n            onClick={() => this.props.onNavigation(\"wishlist\")}\r\n          >\r\n            Wishlist\r\n          </Button>\r\n          <Button\r\n            variant=\"link\"\r\n            onClick={() => this.props.onNavigation(\"cart\")}\r\n          >\r\n            Cart\r\n          </Button>\r\n        </Nav>{\" \"}\r\n        <Form inline>\r\n          <FormControl\r\n            type=\"text\"\r\n            value={this.state.search}\r\n            onChange={this.updateSearch}\r\n            placeholder=\"Search\"\r\n            className=\"mr-sm-2\"\r\n          />\r\n        </Form>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import img1 from \"./ryzen_5_3600.jpg\";\r\nimport img2 from \"./i7_6700k.jpg\";\r\nimport img3 from \"./ryzen_9_3950x.jpg\";\r\nimport img4 from \"./i7_9700k.jpg\";\r\nimport img5 from \"./i7_10700k.jpg\";\r\nimport img6 from \"./i9_9900k.jpg\";\r\nimport img7 from \"./ryzen_9_5900x.jpg\";\r\nimport img8 from \"./i5_9400f.jpg\";\r\nimport img9 from \"./fx_9590.jpg\";\r\nimport img10 from \"./i7_7700k.jpg\";\r\nimport img11 from \"./fx_4350.jpg\";\r\nimport img12 from \"./fx_8350.jpg\";\r\nimport img13 from \"./pentium_g6400.jpg\";\r\nimport img14 from \"./i3_2100.jpg\";\r\nimport img15 from \"./i5_3470.jpg\";\r\nimport img16 from \"./xeon_e52640.jpg\";\r\nimport img17 from \"./athlon_200ge.jpg\";\r\nimport img18 from \"./ryzen_3_3200g.jpg\";\r\nimport img19 from \"./ryzen_5_1600.jpg\";\r\nimport img20 from \"./threadripper_1950X.jpg\";\r\n\r\nconst imgs = [\r\n  img1,\r\n  img2,\r\n  img3,\r\n  img4,\r\n  img5,\r\n  img6,\r\n  img7,\r\n  img8,\r\n  img9,\r\n  img10,\r\n  img11,\r\n  img12,\r\n  img13,\r\n  img14,\r\n  img15,\r\n  img16,\r\n  img17,\r\n  img18,\r\n  img19,\r\n  img20,\r\n];\r\n\r\nexport default imgs;\r\n","export default __webpack_public_path__ + \"static/media/ryzen_5_3600.0b6b6839.jpg\";","export default __webpack_public_path__ + \"static/media/i7_6700k.6fd81de8.jpg\";","export default __webpack_public_path__ + \"static/media/ryzen_9_3950x.f447bbf8.jpg\";","export default __webpack_public_path__ + \"static/media/i7_9700k.aabb3389.jpg\";","export default __webpack_public_path__ + \"static/media/i7_10700k.66bd44bf.jpg\";","export default __webpack_public_path__ + \"static/media/i9_9900k.9c4c4b85.jpg\";","export default __webpack_public_path__ + \"static/media/ryzen_9_5900x.a17c4243.jpg\";","export default __webpack_public_path__ + \"static/media/i5_9400f.1e8f2c03.jpg\";","export default __webpack_public_path__ + \"static/media/fx_9590.408797b9.jpg\";","export default __webpack_public_path__ + \"static/media/i7_7700k.fd41795b.jpg\";","export default __webpack_public_path__ + \"static/media/fx_4350.686d8d09.jpg\";","export default __webpack_public_path__ + \"static/media/fx_8350.f69046b1.jpg\";","export default __webpack_public_path__ + \"static/media/pentium_g6400.b4a7cf7d.jpg\";","export default __webpack_public_path__ + \"static/media/i3_2100.5d40b42a.jpg\";","export default __webpack_public_path__ + \"static/media/i5_3470.a1eb8b8c.jpg\";","export default __webpack_public_path__ + \"static/media/xeon_e52640.dffe70e9.jpg\";","export default __webpack_public_path__ + \"static/media/athlon_200ge.45dff13c.jpg\";","export default __webpack_public_path__ + \"static/media/ryzen_3_3200g.9ed4bc36.jpg\";","export default __webpack_public_path__ + \"static/media/ryzen_5_1600.c6bb36e5.jpg\";","export default __webpack_public_path__ + \"static/media/threadripper_1950X.21bd2569.jpg\";","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport imgs from \"../imgs/imgs\";\r\n\r\nclass Product extends Component {\r\n  state = {\r\n    info: this.props.productInfo,\r\n    singleDisplay: false,\r\n  };\r\n\r\n  /**\r\n   * Handles the selection of a product.\r\n   * Sets the state such that the product will follow special rendering based on it being selected.\r\n   * Calls a function from the parent class to filter the product list.\r\n   */\r\n  handleSelect() {\r\n    this.setState({ singleDisplay: true });\r\n    this.props.onSelect(this.state.info.id);\r\n  }\r\n\r\n  /**\r\n   * Handles the working of the back button.\r\n   * Sets the state such that the product will follow normal rendering based on it no longer being selected.\r\n   * Calls a function from the parent class to repopulate the product list.\r\n   */\r\n  handleBack() {\r\n    this.setState({ singleDisplay: false });\r\n    this.props.onBack();\r\n  }\r\n\r\n  /**\r\n   * Elevates the parameter to the ProductList component\r\n   * @param {Object} item an item to be added to the cart\r\n   */\r\n  handleAddToCart(item) {\r\n    this.props.onAddToCart(item);\r\n  }\r\n\r\n  /**\r\n   * Elevates the parameter to the ProductList component\r\n   * @param {Object} item an item to be added to the wishlist\r\n   */\r\n  handleAddToWishList(item) {\r\n    this.props.onAddToWishList(item);\r\n  }\r\n\r\n  render() {\r\n    const info = this.state.info;\r\n    if (!this.state.singleDisplay) {\r\n      return (\r\n        <tr onClick={() => this.handleSelect()}>\r\n          <td>{info.name}</td>\r\n          <td>{info.coreCount}</td>\r\n          <td>{info.coreClock}</td>\r\n          <td>{info.boostClock}</td>\r\n          <td>${info.price}</td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <br />\r\n          <Button onClick={() => this.handleBack()}>Back</Button>\r\n          <div>\r\n            <br />\r\n            <br />\r\n            <img src={imgs[info.id - 1]} alt={info.name} height=\"300px\" />\r\n            <br />\r\n            <br />\r\n            <h2>Product: {info.name}</h2>\r\n            <br />\r\n            <h3>Specifications</h3>\r\n            <br />\r\n            <p>\r\n              <b>Core Count:</b> {info.coreCount}\r\n            </p>\r\n            <p>\r\n              <b>Base Clock:</b> {info.coreClock}\r\n            </p>\r\n            <p>\r\n              <b>Boost Clock:</b> {info.boostClock}\r\n            </p>\r\n            <p>\r\n              <b>TDP:</b> {info.thermalDesignPower}\r\n            </p>\r\n            <p>\r\n              <b>Multithreading:</b> {info.multithreading}\r\n            </p>\r\n            <p>\r\n              <b>Socket:</b> {info.socket}\r\n            </p>\r\n            <p>\r\n              <b>Integrated Graphics:</b> {info.integratedGraphics}\r\n            </p>\r\n            <p>\r\n              <b>Maximum Supported Memory:</b> {info.maximumMemory}\r\n            </p>\r\n            <br />\r\n            <h3>Price: ${info.price}</h3>\r\n            <Button onClick={() => this.handleAddToWishList(info)}>\r\n              Add to Wishlist\r\n            </Button>{\" \"}\r\n            <Button onClick={() => this.handleAddToCart(info)}>\r\n              Add to Cart\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\r\nimport Product from \"./product\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nclass ProductList extends Component {\r\n  state = {\r\n    visible: true,\r\n    products: this.props.products,\r\n    singleDisplay: false,\r\n  };\r\n\r\n  /**\r\n   * Handles the selection of a product.\r\n   * Filters the product list such that only the selected product is rendered.\r\n   * @param {string} productId is the id of the product which has been selected.\r\n   */\r\n\r\n  handleSelect = (productId) => {\r\n    const products = this.state.products.filter((p) => p.id === productId);\r\n    this.setState({ products });\r\n    this.setState({ singleDisplay: true });\r\n  };\r\n\r\n  /**\r\n   * Handles the working of the back button.\r\n   * Sets the state such that the product list will be repopulated.\r\n   */\r\n  handleBack = () => {\r\n    this.setState({ products: this.props.products });\r\n    this.setState({ singleDisplay: false });\r\n  };\r\n\r\n  /**\r\n   * Elevates the parameter to the Body component\r\n   * @param {Object} item an item to be added to the cart\r\n   */\r\n  handleAddToCart = (item) => {\r\n    this.props.onAddToCart(item);\r\n  };\r\n\r\n  /**\r\n   * Elevates the parameter to the Body component\r\n   * @param {Object} item an item to be added to the wishlist\r\n   */\r\n  handleAddToWishList = (item) => {\r\n    this.props.onAddToWishList(item);\r\n  };\r\n\r\n  /**\r\n   * Renders the ProductList component\r\n   */\r\n  render() {\r\n    var filteredProducts = this.state.products.filter((product) => {\r\n      return (\r\n        product.name.toLowerCase().indexOf(this.props.search.toLowerCase()) !==\r\n        -1\r\n      );\r\n    });\r\n    if (this.state.visible) {\r\n      return (\r\n        <div>\r\n          <Table>\r\n            {!this.state.singleDisplay ? (\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Core Count</th>\r\n                  <th>Base Clock</th>\r\n                  <th>Boost Clock</th>\r\n                  <th>Price</th>\r\n                </tr>\r\n              </thead>\r\n            ) : null}\r\n            <tbody>\r\n              {filteredProducts.map((product) => (\r\n                <Product\r\n                  key={product.id}\r\n                  productInfo={product}\r\n                  onSelect={this.handleSelect}\r\n                  onBack={this.handleBack}\r\n                  onAddToCart={this.handleAddToCart}\r\n                  onAddToWishList={this.handleAddToWishList}\r\n                ></Product>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nclass Cart extends Component {\r\n  /**\r\n   * Elevates the parameter to the Body component\r\n   * @param {Object} item an item to be removed from the cart\r\n   */\r\n  handleRemoveFromCart(item) {\r\n    this.props.onRemoveFromCart(item);\r\n  }\r\n\r\n  /**\r\n   * Renders the cart component\r\n   */\r\n  render() {\r\n    const cart = this.props.cart;\r\n    return (\r\n      <div>\r\n        <h1>Your Cart</h1>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Product</th>\r\n              <th>Quantity</th>\r\n              <th>Price</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cart.map((product, i) => (\r\n              <tr key={i}>\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => this.handleRemoveFromCart(product)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </td>\r\n                <td>{product.name}</td>\r\n                <td>{product.quantityInCart}</td>\r\n                <td>${product.price * product.quantityInCart}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Button onClick={() => this.props.onNavigation(\"checkout\")}>\r\n          Checkout\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nclass WishList extends Component {\r\n  /**\r\n   * Elevates the parameter to the Body component\r\n   * @param {Object} item an item to be removed from the wishlist\r\n   */\r\n  handleRemoveFromWishList(item) {\r\n    this.props.onRemoveFromWishList(item);\r\n  }\r\n\r\n  /**\r\n   * Renders the WishList component\r\n   */\r\n  render() {\r\n    const wishlist = this.props.wishlist;\r\n    return (\r\n      <div>\r\n        <h1>Your Wishlist</h1>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Product</th>\r\n              <th>Price</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {wishlist.map((product, i) => (\r\n              <tr key={i}>\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => this.handleRemoveFromWishList(product)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </td>\r\n                <td>{product.name}</td>\r\n                <td>${product.price}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WishList;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass Order extends Component {\r\n  state = {\r\n    reciept: false,\r\n  };\r\n\r\n  /**\r\n   * Renders the Order Component\r\n   */\r\n  render() {\r\n    const userInfo = this.props.userInfo;\r\n    const items = this.props.items;\r\n    return (\r\n      <div className=\"order\">\r\n        <h2>Thank you {userInfo.name} for your order!</h2>\r\n        <h3>Your Order has Been Submitted.</h3>\r\n        <h4>Confirmation ID: {this.generateConfirmationID()}</h4>\r\n        <br />\r\n        <h4>Items Ordered</h4>\r\n        {items.map((item) => (\r\n          <div className=\"reciept\">\r\n            <div className=\"fl-left\">{item.name}</div>\r\n            <div className=\"fl-right\">${item.price * item.quantityInCart}</div>\r\n            <div className=\"quantity\">x{item.quantityInCart}</div>\r\n          </div>\r\n        ))}\r\n        <div>__________________________________________</div>\r\n        <div className=\"reciept\">\r\n          <h5 className=\"fl-left\">Total:</h5>\r\n          <div className=\"fl-right\"> ${this.props.total}</div>\r\n        </div>\r\n        <br />\r\n        <h5>Billing {\"&\"} Shipping Info</h5>\r\n        <text>\r\n          {userInfo.name}\r\n          <br />\r\n          {userInfo.email}\r\n          <br />\r\n          Card ending in: {this.getCensoredCard(userInfo.card)}\r\n          <br />\r\n          {userInfo.address}\r\n          <br />\r\n          {userInfo.city}, {userInfo.state}\r\n          <br />\r\n          {userInfo.zip}\r\n        </text>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Generates a random confirmation ID\r\n   * @returns the randomized confirmation ID\r\n   */\r\n  generateConfirmationID() {\r\n    var result = \"\";\r\n    const chars =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < 10; i++) {\r\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \"Censors\" the card for display\r\n   * @param {string} card the card number entered by the user\r\n   * @returns the last 4 digits of the card\r\n   */\r\n  getCensoredCard(card) {\r\n    var result = card.substr(card.length - 4, 4);\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  ListGroup,\r\n  Card,\r\n  FormLabel,\r\n  Col,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport Order from \"./order\";\r\n\r\nclass CheckOut extends Component {\r\n  state = {\r\n    cart: {},\r\n    submitted: false,\r\n    cartEmpty: this.props.cartEmpty,\r\n    name: \"\",\r\n    email: \"\",\r\n    card: \"\",\r\n    cvv: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    nameError: \"\",\r\n    emailError: \"\",\r\n    cardError: \"\",\r\n    cvvError: \"\",\r\n    addressError: \"\",\r\n    cityError: \"\",\r\n    stateError: \"\",\r\n    zipError: \"\",\r\n  };\r\n\r\n  /**\r\n   * Handles updating of the forms\r\n   * @param {Event} e the event of typing in a field\r\n   */\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  /**\r\n   * Handles submission of the form\r\n   */\r\n  handleSubmit = (cart) => {\r\n    const isValid = this.validate();\r\n    if (isValid) {\r\n      this.setState({ cart });\r\n      this.setState({ submitted: !this.state.submitted });\r\n      this.props.onEmptyCart();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles form validation\r\n   */\r\n  validate = () => {\r\n    var nameError = \"\";\r\n    var emailError = \"\";\r\n    var cardError = \"\";\r\n    var cvvError = \"\";\r\n    var addressError = \"\";\r\n    var cityError = \"\";\r\n    var stateError = \"\";\r\n    var zipError = \"\";\r\n\r\n    this.setState({ nameError });\r\n    this.setState({ emailError });\r\n    this.setState({ cardError });\r\n    this.setState({ cvvError });\r\n    this.setState({ addressError });\r\n    this.setState({ cityError });\r\n    this.setState({ stateError });\r\n    this.setState({ zipError });\r\n\r\n    if (this.state.name === \"\") {\r\n      nameError = \"Invalid Name\";\r\n    }\r\n\r\n    if (!this.state.email.includes(\"@\")) {\r\n      emailError = \"Invalid Email\";\r\n    }\r\n\r\n    if (!(this.state.card.length === 16) || isNaN(parseInt(this.state.card))) {\r\n      cardError = \"Invalid Card Number\";\r\n    }\r\n\r\n    if (!(this.state.cvv.length === 3) || isNaN(parseInt(this.state.cvv))) {\r\n      cvvError = \"Invalid CVV\";\r\n    }\r\n\r\n    if (this.state.address === \"\") {\r\n      addressError = \"Invalid Address\";\r\n    }\r\n\r\n    if (this.state.city === \"\") {\r\n      cityError = \"Invalid City\";\r\n    }\r\n\r\n    if (this.state.state === \"\") {\r\n      stateError = \"Invalid State\";\r\n    }\r\n\r\n    if (!(this.state.zip.length === 5) || isNaN(parseInt(this.state.zip))) {\r\n      zipError = \"Invalid Zip Code\";\r\n    }\r\n\r\n    if (nameError) {\r\n      this.setState({ nameError });\r\n      return false;\r\n    }\r\n\r\n    if (emailError) {\r\n      this.setState({ emailError });\r\n      return false;\r\n    }\r\n\r\n    if (cardError) {\r\n      this.setState({ cardError });\r\n      return false;\r\n    }\r\n\r\n    if (cvvError) {\r\n      this.setState({ cvvError });\r\n      return false;\r\n    }\r\n\r\n    if (addressError) {\r\n      this.setState({ addressError });\r\n      return false;\r\n    }\r\n\r\n    if (cityError) {\r\n      this.setState({ cityError });\r\n      return false;\r\n    }\r\n\r\n    if (stateError) {\r\n      this.setState({ stateError });\r\n      return false;\r\n    }\r\n\r\n    if (zipError) {\r\n      this.setState({ zipError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Renders the checkout component\r\n   */\r\n  render() {\r\n    var cart;\r\n    this.state.submitted ? (cart = this.state.cart) : (cart = this.props.cart);\r\n    var total = 0;\r\n    for (const key in cart) {\r\n      if (cart.hasOwnProperty(key)) {\r\n        total += cart[key].price * cart[key].quantityInCart;\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h3>Cart</h3>\r\n        <Card style={{ width: \"18rem\" }}>\r\n          <ListGroup variant=\"flush\">\r\n            {cart.map((item, i) => (\r\n              <ListGroup.Item key={`item-${i}`}>\r\n                {item.name} x{item.quantityInCart} $\r\n                {item.price * item.quantityInCart}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Card>\r\n        ____________________________________________\r\n        <h3>Total: ${total}</h3>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Form className=\"checkout\">\r\n          <FormLabel>Name: </FormLabel>\r\n          <FormControl\r\n            name=\"name\"\r\n            className=\"w-50\"\r\n            disabled={this.state.cartEmpty || this.state.submitted}\r\n            onChange={(e) => this.handleChange(e)}\r\n          />\r\n          <p className=\"red\">\r\n            <i>{this.state.nameError}</i>\r\n          </p>\r\n          <br />\r\n          <FormLabel>Email Address: </FormLabel>\r\n          <FormControl\r\n            name=\"email\"\r\n            className=\"w-50\"\r\n            disabled={this.state.cartEmpty || this.state.submitted}\r\n            onChange={(e) => this.handleChange(e)}\r\n          />\r\n          <p className=\"red\">\r\n            <i>{this.state.emailError}</i>\r\n          </p>\r\n          <br />\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <FormLabel>Credit Card: </FormLabel>\r\n              <FormControl\r\n                name=\"card\"\r\n                disabled={this.state.cartEmpty || this.state.submitted}\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              <p className=\"red\">\r\n                <i>{this.state.cardError}</i>\r\n              </p>\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <FormLabel>CVV: </FormLabel>\r\n              <FormControl\r\n                name=\"cvv\"\r\n                className=\"w-50\"\r\n                disabled={this.state.cartEmpty || this.state.submitted}\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              <p className=\"red\">\r\n                <i>{this.state.cvvError}</i>\r\n              </p>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <FormLabel>Address: </FormLabel>\r\n          <FormControl\r\n            name=\"address\"\r\n            className=\"w-50\"\r\n            disabled={this.state.cartEmpty || this.state.submitted}\r\n            onChange={(e) => this.handleChange(e)}\r\n          />\r\n          <p className=\"red\">\r\n            <i>{this.state.addressError}</i>\r\n          </p>\r\n          <br />\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <FormLabel>City: </FormLabel>\r\n              <FormControl\r\n                name=\"city\"\r\n                disabled={this.state.cartEmpty || this.state.submitted}\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              <p className=\"red\">\r\n                <i>{this.state.cityError}</i>\r\n              </p>\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <FormLabel>State: </FormLabel>\r\n              <FormControl\r\n                name=\"state\"\r\n                className=\"w-50\"\r\n                disabled={this.state.cartEmpty || this.state.submitted}\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              <p className=\"red\">\r\n                <i>{this.state.stateError}</i>\r\n              </p>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <FormLabel>Zip: </FormLabel>\r\n          <FormControl\r\n            name=\"zip\"\r\n            className=\"w-50\"\r\n            disabled={this.state.cartEmpty || this.state.submitted}\r\n            onChange={(e) => this.handleChange(e)}\r\n          />\r\n          <p className=\"red\">\r\n            <i>{this.state.zipError}</i>\r\n          </p>\r\n          <br />\r\n          <Button\r\n            onClick={() => this.handleSubmit(cart)}\r\n            disabled={this.state.cartEmpty || this.state.submitted}\r\n            onChange={(e) => this.handleChange(e)}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        {this.state.submitted ? (\r\n          <Order items={cart} userInfo={this.state} total={total} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckOut;\r\n","import React, { Component } from \"react\";\r\nimport ProductList from \"./productlist\";\r\nimport Cart from \"./cart\";\r\nimport WishList from \"./wishlist\";\r\nimport CheckOut from \"./checkout\";\r\n\r\nclass Body extends Component {\r\n  /**\r\n   * Elevates the parameter to the App component\r\n   * @param {Object} item an item to be added to the cart\r\n   */\r\n  handleAddToCart = (item) => {\r\n    this.props.onAddToCart(item);\r\n  };\r\n\r\n  /**\r\n   * Elevates the parameter to the App component\r\n   * @param {Object} item an item to be added to the wishlist\r\n   */\r\n  handleAddToWishList = (item) => {\r\n    this.props.onAddToWishList(item);\r\n  };\r\n\r\n  /**\r\n   * Elevates the parameter to the App component\r\n   * @param {Object} item an item to be removed from the cart\r\n   */\r\n  handleRemoveFromCart = (item) => {\r\n    this.props.onRemoveFromCart(item);\r\n  };\r\n\r\n  /**\r\n   * Elevates the parameter to the App component\r\n   * @param {Object} item an item to be removed from the wishlist\r\n   */\r\n  handleRemoveFromWishList = (item) => {\r\n    this.props.onRemoveFromWishList(item);\r\n  };\r\n\r\n  /**\r\n   * Elevates the parameter to the App component\r\n   * @param {Object} componentToDisplay the component to be displayed in the body\r\n   */\r\n  handleNavigation = (componentToDisplay) => {\r\n    this.props.onNavigation(componentToDisplay);\r\n  };\r\n\r\n  /**\r\n   * Handles conditional rendering of different components (prod. list, cart, wish list, checkout)\r\n   */\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        {this.props.componentToDisplay === \"productList\"\r\n          ? this.renderProductList()\r\n          : null}\r\n        {this.props.componentToDisplay === \"cart\"\r\n          ? this.renderCart(this.props.cart)\r\n          : null}\r\n        {this.props.componentToDisplay === \"wishlist\"\r\n          ? this.renderWishList(this.props.wishlist)\r\n          : null}\r\n        {this.props.componentToDisplay === \"checkout\"\r\n          ? this.renderCheckOut(this.props.cart)\r\n          : null}\r\n      </main>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the current list of products\r\n   * May be sorted based on navbar actions\r\n   */\r\n  renderProductList() {\r\n    return (\r\n      <ProductList\r\n        products={this.props.productList}\r\n        search={this.props.search}\r\n        onAddToCart={this.handleAddToCart}\r\n        onAddToWishList={this.handleAddToWishList}\r\n      />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the current cart\r\n   * @param {Object[]} cart the current cart\r\n   */\r\n  renderCart(cart) {\r\n    return (\r\n      <Cart\r\n        cart={cart}\r\n        onRemoveFromCart={this.handleRemoveFromCart}\r\n        onNavigation={this.handleNavigation}\r\n      />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the current wishlist\r\n   * @param {Object[]} wishlist the current wishlist\r\n   */\r\n  renderWishList(wishlist) {\r\n    return (\r\n      <WishList\r\n        wishlist={wishlist}\r\n        onRemoveFromWishList={this.handleRemoveFromWishList}\r\n      />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the checkout component based on the current cart\r\n   * @param {Object[]} cart the current cart\r\n   */\r\n  renderCheckOut(cart) {\r\n    var isEmpty;\r\n    Object.keys(cart).length === 0 ? (isEmpty = true) : (isEmpty = false);\r\n    return (\r\n      <CheckOut\r\n        cart={cart}\r\n        cartEmpty={isEmpty}\r\n        onEmptyCart={this.props.onEmptyCart}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport Body from \"./components/body\";\r\nimport \"./App.css\";\r\nimport Products from \"./products.json\";\r\n\r\nconst products = Products;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    products: products.products,\r\n    search: \"\",\r\n    cart: [],\r\n    wishlist: [],\r\n    componentToDisplay: \"productList\",\r\n  };\r\n\r\n  /**\r\n   * Stores parameter search in the state for passing to body\r\n   * @param {string} search the string to be searched for\r\n   */\r\n  handleSearch = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  /**\r\n   * Handles sorting of product list based on parameter\r\n   * @param {string} sortMethod the method by which the product list should be sorted\r\n   */\r\n  handleSort = (sortMethod) => {\r\n    var sortedProducts = products.products;\r\n    if (sortMethod === \"default\") {\r\n      sortedProducts.sort(function (a, b) {\r\n        if (a.id < b.id) {\r\n          return -1;\r\n        } else if (a.id > b.id) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      this.setState({ products: sortedProducts });\r\n    } else if (sortMethod === \"new\") {\r\n      sortedProducts.sort(function (a, b) {\r\n        if (Date.parse(a.dateAdded) < Date.parse(b.dateAdded)) {\r\n          return -1;\r\n        } else if (Date.parse(a.dateAdded) > Date.parse(b.dateAdded)) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      this.setState({ products: sortedProducts });\r\n    } else if (sortMethod === \"popular\") {\r\n      sortedProducts.sort(function (a, b) {\r\n        if (a.purchases > b.purchases) {\r\n          return -1;\r\n        } else if (a.purchases > b.purchases) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      this.setState({ products: sortedProducts });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Stores parameter componentToDisplay in state for passing to body\r\n   * @param {string} componentToDisplay the component that should be displayed in the body\r\n   */\r\n  handleNavigation = (componentToDisplay) => {\r\n    this.setState({ componentToDisplay });\r\n  };\r\n\r\n  /**\r\n   * Handles addition of an item into cart\r\n   * If the object 'item' is already in the cart, it will not add a new record, only increment the quantity\r\n   * @param {Object} item an item to be added to the cart\r\n   */\r\n  handleAddToCart = (item) => {\r\n    item.quantityInCart++;\r\n    if (!this.state.cart.includes(item)) {\r\n      const cart = this.state.cart.concat(item);\r\n      this.setState({ cart });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the addition of an item into the wishlist\r\n   * If the object 'item' is already in the wishlist, it will not add a new record\r\n   * @param {Object} item an item to be added to the wishlist\r\n   */\r\n  handleAddToWishList = (item) => {\r\n    if (!this.state.wishlist.includes(item)) {\r\n      const wishlist = this.state.wishlist.concat(item);\r\n      this.setState({ wishlist });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the removal of an item from the cart\r\n   * The record for the item will only be removed if the quantity in cart reaches 0\r\n   * Otherwise, the quantity will be reduced by 1\r\n   * @param {Object} item an item to be removed from the cart\r\n   */\r\n  handleRemoveFromCart = (item) => {\r\n    var cart = this.state.cart;\r\n    if (item.quantityInCart > 0) {\r\n      item.quantityInCart--;\r\n      this.setState({ cart });\r\n    }\r\n    if (item.quantityInCart === 0) {\r\n      cart = this.state.cart.filter((i) => i.id !== item.id);\r\n      this.setState({ cart });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the removal of an item form the wishlist\r\n   * @param {Object} item an item to be removed from the wishlist\r\n   */\r\n  handleRemoveFromWishList = (item) => {\r\n    const wishlist = this.state.wishlist.filter((i) => i.id !== item.id);\r\n    this.setState({ wishlist });\r\n  };\r\n\r\n  /**\r\n   * Handles the emptying of the cart\r\n   */\r\n  handleEmptyCart = () => {\r\n    const cart = [];\r\n    this.setState({ cart });\r\n  };\r\n\r\n  /**\r\n   * Renders the app component\r\n   */\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar\r\n          onSort={this.handleSort}\r\n          onSearch={this.handleSearch}\r\n          onNavigation={this.handleNavigation}\r\n        />\r\n        <Body\r\n          componentToDisplay={this.state.componentToDisplay}\r\n          productList={this.state.products}\r\n          search={this.state.search}\r\n          cart={this.state.cart}\r\n          wishlist={this.state.wishlist}\r\n          onAddToCart={this.handleAddToCart}\r\n          onAddToWishList={this.handleAddToWishList}\r\n          onRemoveFromCart={this.handleRemoveFromCart}\r\n          onRemoveFromWishList={this.handleRemoveFromWishList}\r\n          onNavigation={this.handleNavigation}\r\n          onEmptyCart={this.handleEmptyCart}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}